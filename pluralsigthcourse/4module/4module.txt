const Stars = (props) => 
{
 //  const numberOfStars =1 + Math.floor(Math.random()*9);
   let stars =[];
   //for (let i=0;i<numberOfStars;i++)
   //{
    // stars.push(<i key={i} className="fa fa-star"></i>);
   //}
   return (
      <div className="col-5">
      {_.range(props.numberOfStars).map(i =>
      <i key={i} className="fa fa-star"></i>
      )}
      </div>
   );
}
const Answer = (props) => 
{
  
   return (
      <div className="col-5">
       {props.selected.map(
        (number,i) =>
        <span key={i} onClick={() => props.unselectNumber(number)} >{number}</span>
       )}
      </div>
   );
}

const Button = (props) => 
{
  
   return (
      <div className="col-2">
       <button className="btn" disabled={props.selected.length ===0} >=</button>
      </div>
   );
}

class Game extends React.Component
{
   constructor(props)
   {
      super(props);
      this.state = 
      {
      selectedNumbers : [],
      numberOfStars :1 + Math.floor(Math.random()*9)
      };
   }
   
   selectNumber = (clickedNumber) =>
   {
   console.log('adfa');
   //console.log(this.state.selectedNumbers.indexOf(clickedNumber));
    if(this.state.selectedNumbers.indexOf(clickedNumber)>=0)
    {
    
    }else
      {
      this.setState(
      prevState => (
        {
       selectedNumbers: prevState.selectedNumbers.concat(clickedNumber)
        }
      )
     
      );
      }
   }
   
   unselectNumber = (clickedNumber) => {
   
     this.setState(
      prevState => (
        {
       selectedNumbers: prevState.selectedNumbers.filter(number=>clickedNumber!==number)
        }
      )
     
      );
   }
   render()
   {
    return (
      <div className="container">
      <h3> play nine </h3>
      <hr/>
       <div className="row" >
           <Stars numberOfStars={this.state.numberOfStars} />
               <Button selected={this.state.selectedNumbers}  />
             <Answer unselectNumber={this.unselectNumber}  selected={this.state.selectedNumbers} />
           </div>
           <br />
           <Numbers selected={this.state.selectedNumbers} 
                    selectNumber={this.selectNumber}
            />
      </div>
    );
   }
}

const Numbers = (props) =>
{
//this way , arrayofnumber is created each time a number is created
//const arrayOfNumbers = _.range(1,10);
const numberClassName = (number) =>
 {
      if(props.selected.indexOf(number)>=0)
      {
       return 'selected';
      }
 }
return (
   <div className="card text-center">
   <div>
    {Numbers.list.map((number,i) =>  <span key={i} className={numberClassName(number)}
                                      onClick={() => props.selectNumber(number)}>{number}</span>)}
   
   </div>
   </div>
 );
}
//this will be a constant.
Numbers.list = _.range(1,10);

class App extends React.Component
{
  render()
   {
     return (
        <div>
           <Game />
          
        </div>
     );
   } 
}

ReactDOM.render(<App />,mountNode);